# Licensed Materials - Property of IBM
# IBM Sterling Order Management (5725-D10), IBM Order Management (5737-D18)
# (C) Copyright IBM Corp. 2001, 2018 All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

## PROPERTY_FILE_DETAIL_START
## PROPERTY_FILE_NAME: tuning.properties
## PROPERTY_IN_FILE_NAME: tuning.properties.in
## PROPERTY_FILE_DESCRIPTION
## Properties in the tuning.properties file support two different functions. 
## * One group of properties is used to tune the overall performance of the application. These properties 
##   are set, or calculated, through corresponding values in the Performance Tuning utility (Administration 
##   menu > Operations > System > Performance > Tuning). They can be automatically calculated using the 
##   Memory and Processor properties, or they can be individually set. The corresponding performance tuning 
##   utility field names are provided in the configuration settings tables. Do not edit these properties 
##   directly in the tuning.properties file unless instructed to do so by Customer Support. 
##   Do not override settings for these properties. 
## * The other group of properties is used to set the priority of the queues. The queue priority properties 
##   mostly correspond to the properties in the noapp.properties file. There are eight properties in the 
##   group, and the group will repeat, with an incremented numerical suffix, for each queue and JMS Listener. 
##   Do not override settings for these properties. When necessary, edit property settings directly in the 
##   tuning.properties file. In the future, they will be added to the Performance Tuning utility. 
## The following sets of properties are used to configure overall performance in the application: 
## * Business Process Execution Properties 
## * Cache Properties 
## * Database Connection Pool Properties 
## * General Properties 
## * Memory Properties 
## * noapp Server Properties 
## * Queue Priority Properties 
## PROPERTY_FILE_DETAIL_END

## DATABASE_SUPPORT: N

## PROPERTY_START
## PROPERTY_NAME: ASYNC_BP  
## PROPERTY_GROUP: Business Process Execution
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Number of steps executed before returning a business process to the queue on its first execution cycle.  
## Use the Initial steps in the first execute cycle field in the performance tuning utility to change the 
## setting for this property. 
## Shipped value is 2.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: BP_STEPS 
## PROPERTY_GROUP: Business Process Execution
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Number of business process steps that are run before returning to the JMS queue. 
## Shipped value is 2. 
## Use the number of business process steps executed before returning to queue field in the performance 
## tuning utility to change the setting for this property. 
## Note: If you set this value too low, business processes may not be able to complete processing before 
## they are returned to the queue, allowing another business process to complete some or all of its 
## processing. This slows processing times and causes bottlenecks in the application. 
## For example, if you have five business processes with five activities each, and you set the number of 
## business process steps executed before returning to queue at one, the first business process completes 
## one activity, then the second business completes one activity. This process continues, until all five 
## business have completed the first activity. Then the process begins again with each business process 
## completing the second activity. This continues until all business processes have completed all five 
## activities. This scenario shows how the application processing is slowed if different tuning properties 
## are not tuned properly. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: EDI_CACHE  
## PROPERTY_GROUP: Cache
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Amount of cache used to store EDI data. 
## Shipped value is 50. 
## Use the Other EDI field in the performance tuning utility to change the setting for this property. 
## Note: Increasing the cache size for items that are not used frequently may degrade performance. Increase 
## the cache sizes for items that are used frequently to improve performance.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: ENVELOPE_CACHE
## PROPERTY_GROUP: Cache
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Amount of cache used to store envelopes. 
## Shipped value is 250. 
## Use the Envelopes field in the performance tuning utility to change the setting for this property. 
## Note: Increasing the cache size for items that are not used frequently may degrade performance. 
## Increase the cache sizes for items that are used frequently to improve performance.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: MAP_CACHE  
## PROPERTY_GROUP: Cache
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Amount of cache used to store translation maps. 
## Shipped value is 50.  
## Use the Translation Maps field in the performance tuning utility to change the setting for this property.  
## Note: Increasing the cache size for items that are not used frequently may degrade performance. Increase 
## the cache sizes for items that are used frequently to improve performance.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: MAX_NONTRANS_POOL  
## PROPERTY_GROUP: Database Connection Pool
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Maximum number of connections that are reserved and available for non-transactional requests that the 
## application can use concurrently. After a connection is no longer in use, the connection is returned to 
## the available pool connections and can be reused. After the application reaches the value of this field, 
## the application must wait for a connection to be returned to the pool before processing the request. 
## The default value is 10. 
## Use the Non-transactional pool connections (max) field in the performance tuning utility to change the 
## setting for this property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: MAX_TRANS_POOL  
## PROPERTY_GROUP: Database Connection Pool
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Maximum number of connections that are reserved and available for transactional requests that the 
## application can use concurrently. After a connection is no longer in use, the connection is returned to 
## the available pool connections and can be reused. After the application reaches the value of this field, 
## the application must wait for a connection to be returned to the pool before processing the request. 
## The default value is 28. 
## Use the Transactional pool connections (max) field in the performance tuning utility to change the 
## setting for this property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: MIN_NONTRANS_POOL  
## PROPERTY_GROUP: Database Connection Pool
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Initial number of connections that are reserved and available for non-transactional requests when the 
## application starts. If the application uses all connections concurrently, the application creates a new 
## connection until it reaches the maximum number of connections. 
## The default value is 1. 
## Use the non-transactional pool connections (initial) field in the performance tuning utility to change 
## the setting for this property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: MIN_TRANS_POOL  
## PROPERTY_GROUP: Database Connection Pool
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Initial number of connections that are reserved and available for transactional requests when the 
## application starts. If the application uses all connections concurrently, it creates a new connection 
## until it reaches the maximum number of connections. 
## The default value is 1.  
## Use the Transactional pool connections (initial) field in the performance tuning utility to change the 
## setting for this property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: BP_SIZE  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Threshold size, in bytes, for caching a context in the in-memory cache versus the disk cache. In 
## general, the distribution of context sizes tends to look vaguely like an "M", with one cluster of 
## small contexts and another cluster of larger contexts. If this value is set large, the value for 
## MemCacheSize should also be large. A moderate multiple of the disk block size seems to work very well 
## in many cases. 
## The default value is 16384. 
## This is a planned replacement for the noapp.properties MemCacheThreshold property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: BP_TIME  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Sub-parameter used in the calculation of AE_ExecuteCycleTime.Num (in the noapp.properties file) for 
## each of the queues. NOAPP.EXEC_CYCLE_[Num] * BP_TIME is used to determine the length of the cycle time. 
## The default value is 500.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: GLOBAL_THREADLIMIT  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Maximum number of listener threads on all workflow queues. The sum of all threads on all workflow 
## queues should be less than or equal to this number. Four listener threads per CPU are recommended. For 
## example, if the machine has 4 CPUs, the sum of all workflow queue threads should be less than or equal 
## to 16 threads. 
## The default value is 8. 
## Use the Desired Global Threads field in the performance tuning utility to change the setting for this 
## property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: JMS_LISTNERS  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Number of active business processes that can run concurrently. 
## Shipped value is 8. 
## Use the Desired Global Threads field in the performance tuning utility to change the setting for this 
## property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: PROCESSOR_TWO  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## No longer used.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: PROCESSORS  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Number of actual CPUs in the system. 
## The default value is 2. 
## Use the Number of CPU(s) field in the performance tuning utility to change the setting for this property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: tune.[AppServer].documentInlineSerializationThreshold  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## When the size of the documents increases, there is a significant increase in the use of resources 
## for serialization or deserialization of the business process context. When you install the application, 
## the default value is documentInlineSerializationThreshold = 102400 bytes. 
## If the business process requires the use of the body at almost every step, the number of database reads 
## may use more resources than serialization/deserialization. In this case, set the value higher. If, 
## however, the documents are large and used infrequently, set the value lower. 
## The value for AppServer depends on your installation and may be one of the following: 
## noapp : For Application Server Independent (ASI) installations 
## weblogic : For WebLogic installations 
## jboss : For JBoss installations  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: tune.[AppServer].jndi.contextpoolsize  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Several components of the application use Java Naming and Directory Interface (JNDI) to locate objects. 
## You may find that you need to change the allocation of JNDI contexts in the application to enhance 
## performance. In the application, the default value is 50. 
## The value for AppServer depends on your installation and may be one of the following: 
## noapp : For Application Server Independent (ASI) installations 
## weblogic : For WebLogic installations 
## jboss : For JBoss installations  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: TUNING_PROPS_UPDATED  
## PROPERTY_GROUP: Overall performance
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Indicates whether setupfiles.sh or setupfiles.cmd has been run. 
## Possible values:
## 0 : (default) Setupfiles has not been run.
## 1 : Setupfiles has been run.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: MEMORY	
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Amount of memory allocated for use in processing the application operations. 
## The default value is 768 MB.
## Use the Physical memory (MB) allocated to the application field in the performance tuning utility to 
## change the setting for this property.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: [OpSys].INIT_AGE	
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Initial amount of JVM memory that the application uses for short-lived objects. 
## The default value depends upon the operating system.
## Use the JVM short-lived memory (initial) field in the performance tuning utility to change the setting 
## for this property. 
## Note: JVM short-lived memory has a fast trash collection rate. To avoid reduced performance, set the 
## JVM short-lived memory to one third that of the JVM long-lived memory. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: [OpSys].INIT_HEAP	
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Initial amount of JVM memory that the application reserves for long-lived objects when the application 
## starts. 
## The default value depends upon the operating system. 
## Use the JVM long-lived memory (initial) field in the performance tuning utility to change the setting 
## for this property. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_NAME: [OpSys].MAX_AGE	
## PROPERTY_DESCRIPTION
## Maximum amount of JVM memory that the application uses for short-lived objects. 
## The default value is 256 MB. 
## Use the JVM short-lived memory (max) field in the performance tuning utility to change the setting for 
## this property. 
## Note: JVM short-lived memory has a fast trash collection rate. To avoid reduced performance, set the 
## JVM short-lived memory to one third that of the JVM long-lived memory. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: [OpSys].MAX_HEAP	
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Maximum amount of JVM memory that the application can use for long-lived objects. 
## The default value depends on the operating system. 
## Use the JVM long-lived memory (max) field in the performance tuning utility to change the setting for 
## this property. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: [OpSys].SURVIVOR_RATIO	
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## JVM value that specifies the ratio between the size of the memory area where new Java objects are 
## created and the size of the area where objects are moved when they "survive" a garbage collection cycle. 
## The default value is 4. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: OS400.MIN_HEAP 
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## (OS400 only) Minimum amount of JVM memory that the application can use for long-lived objects. 
## The default value is 32 MB. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: MySql.POOL_SIZE 
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## The MySQL buffer pool memory setting. 
## The default value is 128 MB. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: MySql.ADDT_POOL_SIZE  
## PROPERTY_GROUP: Memory setting
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## The MySQL buffer pool additional memory setting. 
## The default value is 32 MB.  
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: NOAPP.JMS_PAGING_HIGH  
## PROPERTY_GROUP: noapp server
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Amount of memory allocated to the business process queue. After the application reaches this limit, the 
## application writes all messages, except active messages, to disk. 
## The default value is 192 MB. 
## Use the In memory cache size (MB) for small contexts field in the performance tuning utility to change 
## the setting for this property. 
## Note: Increasing this value too much reduces the amount of memory available for other components of the 
## application, such as caches and general processing.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: NOAPP.JMS_PAGING_MAX  
## PROPERTY_GROUP: noapp server
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Maximum amount of disk space used to store business process context when it is being moved from memory. 
## This limit ensures that the application does not consume all available disk space. 
## The default value is 1536 MB. 
## Use the Disk cache size (MB) field in the performance tuning utility to change the setting for this 
## property.  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: NOAPP.CACHE_THRESHOLD_[Num]  
## PROPERTY_GROUP: Queue Priority
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Number of business processes that must be in the queue before any will be cached (or rescheduled if 
## that is enabled). 
## Repeats (with an incremented numerical suffix) for each queue and JMS Listener.
## Example: 0  
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: NOAPP.EXEC_CYCLE_[Num]  
## PROPERTY_GROUP: Queue Priority
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Base number for the number of steps in the execution cycle. 
## Repeats (with an incremented numerical suffix) for each queue and JMS Listener.
## Example: 1000  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: NOAPP.EXEC_CYCLE_TIME_[Num]  
## PROPERTY_GROUP: Queue Priority
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Maximum number of seconds that an execution cycle may last before the business process is returned to 
## the queue on its next step. 
## Repeats (with an incremented numerical suffix) for each queue and JMS Listener.
## Example: 1000000000  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_GROUP: Queue Priority
## PROPERTY_TYPE: Integer
## PROPERTY_NAME: NOAPP.INITIAL_CYCLES_[Num]  
## PROPERTY_DESCRIPTION
## Number of steps to take on the first execution cycle of a business process before returning it to the 
## queue. 
## Repeats (with an incremented numerical suffix) for each queue and JMS Listener.
## Example: 5  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_GROUP: Queue Priority
## PROPERTY_TYPE: Integer
## PROPERTY_NAME: NOAPP.MAX_POOL_SIZE_[Num]  
## PROPERTY_DESCRIPTION
## Maximum number of listener threads used to execute workflows on the workflow queue specified by [Num]. 
## This property should be tuned based on the number of CPUs, business process execution requirements, 
## priority, and the number of recommended threads per CPU (4). 
## Repeats (with an incremented numerical suffix) for each queue and JMS Listener.
## Example: 5  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: NOAPP.MAX_WAIT_TIME_[Num]  
## PROPERTY_GROUP: Queue Priority
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Length of time a business process may wait in the queue before being rescheduled (if that is enabled). 
## Repeats (with an incremented numerical suffix) for each queue and JMS Listener.
## Example: 72000000  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: NOAPP.MIN_POOL_SIZE_[Num]  
## PROPERTY_GROUP: Queue Priority
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Initial number of listener threads used to execute workflows on the workflow queue specified by [Num]. 
## This number must be less than or equal to the value of MAX_POOL_SIZE for the appropriate queue. 
## Repeats (with an incremented numerical suffix) for each queue and JMS Listener.
## Example: 0  
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: NOAPP.RESOURCE_ALLOCATION_[Num]  
## PROPERTY_GROUP: Queue Priority
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Percentage or portion of machine resources assigned to each queue. 
## Repeats (with an incremented numerical suffix) for each queue and JMS Listener.
## Example: 50
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_VALUE_ALL
#NOTE: THIS FILE IS NOT CURRENTLY EXTENDABLE.
#The UI to update tuning only updates this file so extensions
#could override what users select in the UI.  Also this file is
#used as input to munge process for providing variable values to
#substitute and that process does not look for extensions.

#DB Connection Pools
MIN_TRANS_POOL=0
MAX_TRANS_POOL=50

MIN_NONTRANS_POOL=1
MAX_NONTRANS_POOL=100

#Heap Size
HP-UX.INIT_HEAP=1024
AIX.INIT_HEAP=512
SunOS.INIT_HEAP=512
Linux.INIT_HEAP=512
Windows.INIT_HEAP=768
OS400.INIT_HEAP=768
OS390.INIT_HEAP=768

OS400.MIN_HEAP=32

HP-UX.MAX_HEAP=1024
AIX.MAX_HEAP=1024
SunOS.MAX_HEAP=1024
Linux.MAX_HEAP=1024
Windows.MAX_HEAP=768
OS400.MAX_HEAP=1024
OS390.MAX_HEAP=768

#Agent server heap Size
HP-UX.AGENT.INIT_HEAP=512
AIX.AGENT.INIT_HEAP=512
SunOS.AGENT.INIT_HEAP=512
Linux.AGENT.INIT_HEAP=512
Windows.AGENT.INIT_HEAP=512
OS400.AGENT.INIT_HEAP=512
OS390.AGENT.INIT_HEAP=512
Macos.AGENT.INIT_HEAP=512

HP-UX.AGENT.MAX_HEAP=1024
AIX.AGENT.MAX_HEAP=1024
SunOS.AGENT.MAX_HEAP=1024
Linux.AGENT.MAX_HEAP=1024
Windows.AGENT.MAX_HEAP=1024
OS400.AGENT.MAX_HEAP=1024
OS390.AGENT.MAX_HEAP=1024
Macos.AGENT.MAX_HEAP=1024

#Increasing heap size for 64-Bit JVM
HP-UX-64.INIT_HEAP=1280
AIX-64.INIT_HEAP=1280
SunOS-64.INIT_HEAP=1280
Linux-64.INIT_HEAP=1280
Windows-64.INIT_HEAP=1280

HP-UX-64.MAX_HEAP=1280
AIX-64.MAX_HEAP=1280
SunOS-64.MAX_HEAP=1280
Linux-64.MAX_HEAP=1280
Windows-64.MAX_HEAP=1280

#NewAge Memory
HP-UX.INIT_AGE=256
AIX.INIT_AGE=64
SunOS.INIT_AGE=128
Linux.INIT_AGE=64
Windows.INIT_AGE=256
OS400.INIT_AGE=256
OS390.INIT_AGE=256

HP-UX.MAX_AGE=256
AIX.MAX_AGE=128
SunOS.MAX_AGE=256
Linux.MAX_AGE=128
Windows.MAX_AGE=256
OS400.MAX_AGE=256
OS390.MAX_AGE=256

HP-UX.SURVIVOR_RATIO=4
#removed for Sun JDK 1.5 and newer SunOS.SURVIVOR_RATIO=4
Linux.SURVIVOR_RATIO=4
#removed for Sun JDK 1.5 and newer Windows.SURVIVOR_RATIO=4

#NewAge Memory - 64bit
HP-UX-64.INIT_AGE=256
AIX-64.INIT_AGE=64
SunOS-64.INIT_AGE=128
Linux-64.INIT_AGE=64
Windows-64.INIT_AGE=256

HP-UX-64.MAX_AGE=256
AIX-64.MAX_AGE=128
SunOS-64.MAX_AGE=256
Linux-64.MAX_AGE=128
Windows-64.MAX_AGE=256

HP-UX-64.SURVIVOR_RATIO=4
#removed for Sun JDK 1.5 and newer SunOS-64.SURVIVOR_RATIO=4
Linux-64.SURVIVOR_RATIO=4
#removed for Sun JDK 1.5 and newer Windows-64.SURVIVOR_RATIO=4


MySql.POOL_SIZE=128
MySql.ADDT_POOL_SIZE=32


#append tuning_platform_asi_ext.properties in here temportary

MEMORY=1024
PROCESSORS=2



#NO_APP Server Values
NOAPP.JMS_PAGING_MAX=1536
NOAPP.JMS_PAGING_HIGH=192

#BP Execution
BP_STEPS=10
ASYNC_BP=2

#Caches
MAP_CACHE=50
ENVELOPE_CACHE=250
EDI_CACHE=50



tune.websphere.documentInlineSerializationThreshold=102400
tune.weblogic.documentInlineSerializationThreshold=102400
tune.noapp.documentInlineSerializationThreshold=102400
tune.jboss.documentInlineSerializationThreshold=102400

tune.websphere.jndi.contextpoolsize=20
tune.weblogic.jndi.contextpoolsize=50
tune.noapp.jndi.contextpoolsize=50
tune.jboss.jndi.contextpoolsize=50





















TUNING_PROPS_UPDATED=0





PROCESSOR_TWO=2
JMS_LISTNERS=8
BP_SIZE=16384
BP_TIME=500
GLOBAL_THREADLIMIT=8
NOAPP.MAX_POOL_SIZE_1=1
NOAPP.MIN_POOL_SIZE_1=0
NOAPP.EXEC_CYCLE_1=1000
NOAPP.INITIAL_CYCLES_1=5
NOAPP.CACHE_THRESHOLD_1=0
NOAPP.EXEC_CYCLE_TIME_1=1000000000
NOAPP.MAX_WAIT_TIME_1=72000000
NOAPP.RESOURCE_ALLOCATION_1=50
NOAPP.MAX_POOL_SIZE_2=3
NOAPP.MIN_POOL_SIZE_2=0
NOAPP.EXEC_CYCLE_2=100
NOAPP.INITIAL_CYCLES_2=5
NOAPP.CACHE_THRESHOLD_2=10
NOAPP.EXEC_CYCLE_TIME_2=1000000000
NOAPP.MAX_WAIT_TIME_2=1000000000
NOAPP.RESOURCE_ALLOCATION_2=20
NOAPP.MAX_POOL_SIZE_3=5
NOAPP.MIN_POOL_SIZE_3=0
NOAPP.EXEC_CYCLE_3=100
NOAPP.INITIAL_CYCLES_3=5
NOAPP.CACHE_THRESHOLD_3=10
NOAPP.EXEC_CYCLE_TIME_3=10000000
NOAPP.MAX_WAIT_TIME_3=1000000000
NOAPP.RESOURCE_ALLOCATION_3=40
NOAPP.MAX_POOL_SIZE_4=8
NOAPP.MIN_POOL_SIZE_4=1
NOAPP.EXEC_CYCLE_4=100
NOAPP.INITIAL_CYCLES_4=5
NOAPP.CACHE_THRESHOLD_4=20
NOAPP.EXEC_CYCLE_TIME_4=2000000
NOAPP.MAX_WAIT_TIME_4=72000000
NOAPP.RESOURCE_ALLOCATION_4=40
NOAPP.MAX_POOL_SIZE_5=2
NOAPP.MIN_POOL_SIZE_5=0
NOAPP.EXEC_CYCLE_5=100
NOAPP.INITIAL_CYCLES_5=5
NOAPP.CACHE_THRESHOLD_5=30
NOAPP.EXEC_CYCLE_TIME_5=100000
NOAPP.MAX_WAIT_TIME_5=3600000
NOAPP.RESOURCE_ALLOCATION_5=50
NOAPP.MAX_POOL_SIZE_6=8
NOAPP.MIN_POOL_SIZE_6=0
NOAPP.EXEC_CYCLE_6=10
NOAPP.INITIAL_CYCLES_6=5
NOAPP.CACHE_THRESHOLD_6=50
NOAPP.EXEC_CYCLE_TIME_6=100000
NOAPP.MAX_WAIT_TIME_6=3600000
NOAPP.RESOURCE_ALLOCATION_6=60
NOAPP.MAX_POOL_SIZE_7=2
NOAPP.MIN_POOL_SIZE_7=0
NOAPP.EXEC_CYCLE_7=5
NOAPP.INITIAL_CYCLES_7=5
NOAPP.CACHE_THRESHOLD_7=50
NOAPP.EXEC_CYCLE_TIME_7=500
NOAPP.MAX_WAIT_TIME_7=1200000
NOAPP.RESOURCE_ALLOCATION_7=90
NOAPP.MAX_POOL_SIZE_8=2
NOAPP.MIN_POOL_SIZE_8=0
NOAPP.EXEC_CYCLE_8=2
NOAPP.INITIAL_CYCLES_8=10
NOAPP.CACHE_THRESHOLD_8=100
NOAPP.EXEC_CYCLE_TIME_8=300
NOAPP.MAX_WAIT_TIME_8=60000
NOAPP.RESOURCE_ALLOCATION_8=120
NOAPP.MAX_POOL_SIZE_9=4
NOAPP.MIN_POOL_SIZE_9=0
NOAPP.EXEC_CYCLE_9=50
NOAPP.INITIAL_CYCLES_9=5
NOAPP.CACHE_THRESHOLD_9=10
NOAPP.EXEC_CYCLE_TIME_9=100000
NOAPP.MAX_WAIT_TIME_9=3600000
NOAPP.RESOURCE_ALLOCATION_9=50
