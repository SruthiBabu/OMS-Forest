# Licensed Materials - Property of IBM
# IBM Sterling Order Management (5725-D10), IBM Order Management (5737-D18)
# (C) Copyright IBM Corp. 2001, 2018 All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

## PROPERTY_FILE_DETAIL_START
## PROPERTY_FILE_NAME: xapirest.properties
## PROPERTY_IN_FILE_NAME: xapirest.properties.in
## PROPERTY_FILE_DESCRIPTION
## This property file controls XAPI calls made from the HTTP REST layer.
## It supports the same properties as yifclient.properties. Consult that file for full documentation.
## PROPERTY_FILE_DETAIL_END

## PROPERTY_START
## PROPERTY_NAME: yif.apifactory.protocol
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Default behavior is a LOCAL API call. This may be set to HTTP or HTTPS instead.
## Overriding yif.apifactory.protocol and setting an external url to the property yif.httpapi.url will re-route the REST requests received at the HTTP REST layer to the external server.
yif.apifactory.protocol=LOCAL
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yif.httpapi.url
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Set the following to support HTTP or HTTPS calls
## Overriding yif.apifactory.protocol and setting an external url to this property will re-route the REST requests received at the HTTP REST layer to the external server.
#yif.httpapi.url=http://fa2cdc8d04dd:11000/admin/interop/InteropHttpServlet
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yif.httpapi.userid
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Set the following userid and password to use basic authentication over HTTP or HTTPS
## UserId for basic authentication over HTTP or HTTPS
#yif.httpapi.userid=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yif.httpapi.password
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Set the following userid and password to use basic authentication over HTTP or HTTPS
## Password for basic authentication over HTTP or HTTPS
#yif.httpapi.password=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: javax.net.ssl.keyStore
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Set the following property if you are using HTTPS
## Set the location of the key store file, if you are using client side digital certificates
#javax.net.ssl.keyStore=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: javax.net.ssl.keyStorePassword
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Set the following property if you are using HTTPS
## Set the location of the key store file, if you are using client side digital certificates
#javax.net.ssl.keyStorePassword=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: javax.net.ssl.trustStore
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## This property should be set for server certificate authentication
## The trust store is the location of the file where the server certificate root was imported
#javax.net.ssl.trustStore=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: javax.net.ssl.trustStorePassword
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## This property should be set for server certificate authentication
## The trust store is the location of the file where the server certificate root was imported
#javax.net.ssl.trustStorePassword=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yif.httpapi.disableKeyStore
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_PERMISSIBLE_VALUES: true,false
## PROPERTY_DESCRIPTION
## Set the following to disable selective aspects of HTTPS.Disable client certificates
#yif.httpapi.disableKeyStore=true
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yif.httpapi.disableTrustStore
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_PERMISSIBLE_VALUES: true,false
## PROPERTY_DESCRIPTION
## Disable verification of server certificates
#yif.httpapi.disableTrustStore=true
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yif.httpapi.disableHostnameVerification
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_PERMISSIBLE_VALUES: true,false
## PROPERTY_DESCRIPTION
## Disable verification of the remote server name when using HTTPS
#yif.httpapi.disableHostnameVerification=true
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yif.httpapi.urlStreamHandler
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Set the following to use a custom URLStreamHandler. Depending on configuration,
## this may be required when making outbound HTTPS requests from a WebLogic server.
#yif.httpapi.urlStreamHandler=sun.net.www.protocol.https.Handler
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yfs.relogin
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_PERMISSIBLE_VALUES: true,false
## PROPERTY_DESCRIPTION
## This property should always be set
yfs.relogin=true
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: servlet.authstyle
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: CONTAINER, CONTAINER_USER, STANDARD, BASIC, OPEN, EXTENDED
## PROPERTY_DESCRIPTION
## The default method of authentication is through the web container. Set this property to change the authentication process.
## Valid values: 
## CONTAINER : A user must be authenticated by the application container and a specific userid will be used. The property servlet.userid also to be set along with this.
## CONTAINER_USER : A user must be authenticated by the application container, and the identified Principal name will be used as the userid. This is the default setting.
## STANDARD : Pass _loginid and _tokenid (same idea as InteropHttpServlet's user token)
## BASIC : Pass Realm name and send user and password information encoded using the base64 algorithm in the Authorization header in the request. This will attempt to login to the system using the user credentials passed in the request.  
## OPEN : Always use a given user, and perform no extra authentication checks. The property servlet.userid also to be set along with this.
## EXTENDED : Set the properties 'servlet.ssomanager' or 'yfs.login.singlesignon.class' to a custom SSO implementation of com.yantra.ycp.japi.util.YCPSSOManager interface.
servlet.authstyle=STANDARD
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: servlet.userid
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Set property to define the User id to call the Api. In real world it should be a user with Api invocation privileges.
#servlet.userid=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: servlet.ssomanager
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_PERMISSIBLE_VALUES: 
## PROPERTY_DESCRIPTION
## Set property to define an implementation of com.yantra.ycp.japi.util.YCPSSOManager for a servlet.authstyle of EXTENDED type. 
## This property is read before 'yfs.login.singlesignon.class' while retrieving the YCPSSOManager implementation class.
#servlet.ssomanager=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: servlet.put.enabled
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_PERMISSIBLE_VALUES: true, false
## PROPERTY_DESCRIPTION
## Set this property to 'true' to make modify calls with PUT request.
## The default value is 'false'.
#servlet.put.enabled=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.jwt.auth.enabled
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_PERMISSIBLE_VALUES: true, false
## PROPERTY_DESCRIPTION
## Set this property to 'true' to enable JSON Web Token (JWT) based authentication for REST apis.
## If this property is set to true, and a valid Bearer token is received in Authorization header, then 
## JWT authentication is given preference over other ways of authentication configured by property 'servlet.authstyle'.
## The default value is 'false'.
#servlet.jwt.auth.enabled=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.cors.enabled
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_PERMISSIBLE_VALUES: true, false
## PROPERTY_DESCRIPTION
## Set this property to 'true' to enable Cross Origin Resource Sharing (CORS) support for REST apis.
## The default value is 'false'.
#servlet.cors.enabled=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.cors.max.age
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Integer
## PROPERTY_PERMISSIBLE_VALUES: true, false
## PROPERTY_DESCRIPTION
## Set this property to time (in seconds), the results of CORS preflight request should be cached in a preflight results cache by the browser.
## This corresponds to the http response header 'Access-Control-Max-Age'.This is applicable only if 'servlet.cors.enabled' is set to true.
## The default value is 3600 i.e. 1 hour.
#servlet.cors.max.age=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.cors.allow.credentials
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_PERMISSIBLE_VALUES: true, false
## PROPERTY_DESCRIPTION
## Set this property to 'true' to signal the browser to allow to send credentials to the server in a CORS request.
## This corresponds to the http response header 'Access-Control-Allow-Credentials'.This is applicable only if 'servlet.cors.enabled' is set to true.
## The default value is 'true'.
#servlet.cors.allow.credentials=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.cors.allow.origin
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Set this property to specify comma-separated origin values which are allowed for CORS. The origin can be in the format 'protocol://host_name:[port]', 
## where the port number is optional. The property can accept a single value of wildcard (*) to permit access for any origin. 
## This corresponds to the http response header 'Access-Control-Allow-Origin'.This is applicable only if 'servlet.cors.enabled' is set to true.
## The default value is *.
#servlet.cors.allow.origin=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.cors.expose.headers
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Set this property to specify comma separated HTTP headers that can be accessed by a browser while making a CORS request.
## This corresponds to the http response header 'Access-Control-Expose-Headers'.This is applicable only if 'servlet.cors.enabled' is set to true.
## The default value is not set hence the header 'Access-Control-Expose-Headers' is not sent in response by default.
#servlet.cors.expose.headers=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.cors.allow.headers
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Set this property to specify comma separated allowed HTTP request headers which are returned in response to a CORS preflight request.
## This corresponds to the http response header 'Access-Control-Allow-Headers'.This is applicable only if 'servlet.cors.enabled' is set to true.
## The default value is same as the value of the incoming request header 'Access-Control-Request-Headers'
#servlet.cors.allow.headers=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.cors.allow.methods
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: N
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Set this property to specify comma separated allowed HTTP request methods which are returned in response to a CORS preflight request.
## This corresponds to the http response header 'Access-Control-Allow-Methods'.This is applicable only if 'servlet.cors.enabled' is set to true.
## The default the value is same as the value of the incoming request header 'Access-Control-Request-Method'
#servlet.cors.allow.methods=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: servlet.token.absolute.timeout.<userid>
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: Y
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Long
## PROPERTY_DESCRIPTION
## Set the absolute timeout in milliseconds for a user when standard authsyle is used. The value should be greater than 0. By default it is not set.
## If this is set for a user, token provided in the request for this user, is considered valid only till the configured timeout since the time of creation of the token.
##
#servlet.token.absolute.timeout.<userid>=
## PROPERTY_END


## PROPERTY_START
## PROPERTY_NAME: servlet.token.absolute.timeout
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: Y
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Long
## PROPERTY_DESCRIPTION
## Set the global absolute timeout in milliseconds for all users when standard authsyle is used. The value should be greater than 0. By default it is not set.
## If this is set, the user token provided in the request is considered valid only till the configured timeout since the time of creation of the token. The user specific timeout takes precendence over this property.
##
#servlet.token.absolute.timeout=
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: servlet.token.absolute.timeout.modifyrecord
## DATABASE_SUPPORT: Y
## EXTENDED_PROPERTY: N
## MODIFIABLE: Y
## MODIFIABLE_AT_RUNTIME: Y
## SERVER_OVERRIDE: N
## USER_OVERRIDE: N
## PROPERTY_GROUP: 
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## When absolute token timeout is configured using servlet.standardauth.abs.timeout or servlet.standardauth.abs.<userid>.timeout,
## then this property can be set to true to cause a dummy update to the user activity record upon validation of the token provided in the request. Default is false.
##
servlet.token.absolute.timeout.modifyrecord=false
## PROPERTY_END
