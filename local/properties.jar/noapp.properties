# Licensed Materials - Property of IBM
# IBM Sterling Order Management (5725-D10), IBM Order Management (5737-D18)
# (C) Copyright IBM Corp. 2001, 2018 All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

## PROPERTY_FILE_DETAIL_START
## PROPERTY_FILE_NAME: noapp.properties
## PROPERTY_IN_FILE_NAME: noapp.properties.in
## PROPERTY_FILE_DESCRIPTION
## Controls the application server independent (ASI) server.

## Serialization Methodology
## Data in a business process is stored in an XML tree structure called a DOM.
## The diagram below is a typical tree:
##                                  ROOT
##                                   ||
##    -----------------------------------------------------------------
##    |       |       |       |       |       |       |       |       |
##    A       B       C       D       E       F       G       H       I 
##
## When this data is passed between the different components of the application,
## or when it is put on the queue, there is potential for this structure to be
## serialized and deserialized.  The default serialization method is object
## serialization and is performed recursively across the DOM tree and then down.
## This recursion is expensive.  Each node in the treee that is recursed into 
## uses stack space, which is limited.  To resolve this problem, the application
## uses its own serialization method that uses XML.  The XML serialization
## method is slightly slower in some situations, but the difference should not be
## noticeable.  By default, the application always uses XML serialization.

## Default Queue Configuration
## The default settings for the nine queues are summarized in the following lists:

## Scheduling Policy and Variable - ALL Policies
## * AE ExecuteCycle
##   Q1 : 1,000
##   Q2 : 100
##   Q3 : 100
##   Q4 : 100
##   Q5 : 100
##   Q6 : 10
##   Q7 : 5
##   Q8 : 2
##   Q9 : 50 
## * AE ExecuteCycleTime
##   Q1 : 1,000,000,000
##   Q2 : 1,000,000,000
##   Q3 : 10,000,000
##   Q4 : 2,000,000
##   Q5 : 100,000
##   Q6 : 100,000
##   Q7 : 500
##   Q8 : 300
##   Q9 : 100,000
## * QueueDepth 
##   Q1 : 500,000
##   Q2 : 500,000 
##   Q3 : 500,000
##   Q4 : 500,000 
##   Q5 : 500,000 
##   Q6 : 500,000 
##   Q7 : 500,000 
##   Q8 : 500,000 
##   Q9 : 500,000 
## * MaxPoolSize
##   Q1 : 1
##   Q2 : 3
##   Q3 : 5
##   Q4 : 8
##   Q5 : 2
##   Q6 : 8
##   Q7 : 2
##   Q8 : 2
##   Q9 : 4
## * CachingThreshold
##   Q1 : 0
##   Q2 : 10
##   Q3 : 10
##   Q4 : 20
##   Q5 : 30
##   Q6 : 50
##   Q7 : 50
##   Q8 : 100
##   Q9 : 10
## * MinPoolSize
##   Q1 : 0 
##   Q2 : 0
##   Q3 : 0
##   Q4 : 1
##   Q5 : 1
##   Q6 : 8
##   Q7 : 2
##   Q8 : 2
##   Q9 : 2
## * JavaPriority
##   Q1 : 5 
##   Q2 : 5
##   Q3 : 5
##   Q4 : 5
##   Q5 : 5
##   Q6 : 5
##   Q7 : 5
##   Q8 : 5
##   Q9 : 5
## * EnableDeadlines
##   Q1 : False 
##   Q2 : True
##   Q3 : True
##   Q4 : True
##   Q5 : True
##   Q6 : True
##   Q7 : False
##   Q8 : False
##   Q9 : False
## * Rescheduling
##   Q1 : True
##   Q2 : True
##   Q3 : True
##   Q4 : True
##   Q5 : True
##   Q6 : True
##   Q7 : False
##   Q8 : False
##   Q9 : False
## * ReschedulingInterval
##   Q1 : 5,000
##   Q2 : 5,000 
##   Q3 : 5,000 
##   Q4 : 5,000
##   Q5 : 5,000
##   Q6 : 5,000
##   Q7 : 5,000
##   Q8 : 5,000
##   Q9 : 5,000
## * MaxWaitTime
##   Q1 : 72,000,000 
##   Q2 : 1,000,000,000
##   Q3 : 1,000,000,000
##   Q4 : 72,000,000
##   Q5 : 3,600,000
##   Q6 : 3,600,000
##   Q7 : 1,200,000
##   Q8 : 60,000
##   Q9 : 3,600,000

## Scheduling Policy and Variable - FairShare Scheduling Policy 
## * ResourceAllocation
##   Q1 : 50 
##   Q2 : 20
##   Q3 : 40
##   Q4 : 40
##   Q5 : 50
##   Q6 : 60
##   Q7 : 60
##   Q8 : 120
##   Q9 : 50
## * InitialCycles
##   Q1 : 5
##   Q2 : 5 
##   Q3 : 5
##   Q4 : 5
##   Q5 : 5
##   Q6 : 5
##   Q7 : 5
##   Q8 : 10
##   Q9 : 5
## * DeadlineThreads
##   Q1 : 0 
##   Q2 : 0
##   Q3 : 0
##   Q4 : 0
##   Q5 : 0
##   Q6 : 0
##   Q7 : 0
##   Q8 : 0
##   Q9 : 0
## * StealThreads
##   Q1 : False 
##   Q2 : False
##   Q3 : False
##   Q4 : False
##   Q5 : False
##   Q6 : False
##   Q7 : True
##   Q8 : False
##   Q9 : False
## * AllowStealing
##   Q1 : False
##   Q2 : False
##   Q3 : False
##   Q4 : False
##   Q5 : False
##   Q6 : True
##   Q7 : True
##   Q8 : False
##   Q9 : False
## PROPERTY_FILE_DETAIL_END

## DATABASE_SUPPORT: N

## PROPERTY_START
## PROPERTY_NAME: rmiurl                
## PROPERTY_GROUP: Basic Server Configuration
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Specifies the URL where the RMI registry is running. Used for lookups. 
## The default value is rmi://[server name]:60813. 
## Do not change.
rmiurl=rmi://fa2cdc8d04dd:11013
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: local_dbPool	      
## PROPERTY_GROUP: Database Settings
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Specifies the non-transactional database pool. When a service performs an operation using this 
## pool, the operation will not be part of the transaction in the application engine even though the 
## service itself is part of it. 
## Example: mysqlPool_local.
local_dbPool=db2Pool_local
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: dbNoTransPool         
## PROPERTY_GROUP: Database Settings
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Same as local_dbPool. Used in a previous release.
dbNoTransPool=db2Pool_NoTrans
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: dbPool		      
## PROPERTY_GROUP: Database Settings
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Database pool used by the application engine and most services. The connection from this pool is 
## part of the application engine transaction. 
## Example: mysqlPool. 
## Do not change.
dbPool=db2Pool
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: dbPoolBackup
## PROPERTY_GROUP: Database Settings
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Backup Database pool used by reporting components. The connection from this pool is 
## part of the application engine transaction. 
## Example: db2PoolBackup. 
## Do not change.
#dbPoolBackup=db2PoolBackup
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: dbSelectPool          
## PROPERTY_GROUP: Database Settings
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Database pool used by the application services. The connection from this pool is not part of the 
## application engine transaction. 
## Do not change.
## The value of dbSelectPool depends on the database type (DB_VENDOR in sandbox.cfg).
## * If DB_VENDOR=(Sybase | MSSQL | Oracle | Oracle9i | DB2 | DB2ISERIES | DB2ZOS), 
##   then dbSelectPool=&DB_POOL
## * If DB_VENDOR=(INFORMIX | MySQL), then dbSelectPool=db2Pool_Select
## Examples: oraclePool, mysqlPool_Select





dbSelectPool=db2Pool




## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: externalDBPoolRetries 
## PROPERTY_GROUP: Database Settings
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Number of times to retry a command when the database server is not on the same host as the application. 
## The default value is 25.
externalDBPoolRetries=25
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: servername 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## 
servername = node1
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: conn.verify.maxTries 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## 
conn.verify.maxTries=3
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: singleThreadStartUp 
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## 
## Valid values:
## true :
## false : 
singleThreadStartUp=false
## PROPERTY_END



## PROPERTY_START
## PROPERTY_NAME: cacheManager.forcesyncloading 
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## force synchronize loading
##	In order to make the GET unsynronized, application to set the above said property to false (that is cacheManager.forcesyncloading=false).
##	If you are overriding the property through customer overrides then, you should specify the following entry in customer_overrides "shell.cacheManager.forcesyncloading=false" 
##	For overriding this property in the WAR/EAR, it needs to be prefixed with the value of system property 'vendor' which is given during application server startup.
##	E.g. if the value of system property 'vendor' is given as 'shell' during application server startup then provide this peroperty as "shell.cacheManager.forcesyncloading=true" in customer_overrides.proeprties
##	For agent server and integration server value will always be shell.
## Valid values:
## true :
## false : 
#cacheManager.forcesyncloading=true
## PROPERTY_END

