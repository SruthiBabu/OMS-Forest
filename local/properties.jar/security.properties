# Licensed Materials - Property of IBM
# IBM Sterling Order Management (5725-D10), IBM Order Management (5737-D18)
# (C) Copyright IBM Corp. 2001, 2018 All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

## PROPERTY_FILE_DETAIL_START
## PROPERTY_FILE_NAME: security.properties
## PROPERTY_IN_FILE_NAME: security.properties.in
## PROPERTY_FILE_DESCRIPTION
## Security-related property settings used by the application.
## This file should not be edited. Override property settings, if needed, using the 
## customer_overrides.properties file.
## PROPERTY_FILE_DETAIL_END

## DATABASE_SUPPORT: N

## PROPERTY_START
## PROPERTY_NAME: passphrase 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## System passphrase to the application.
## You can supply the system passphrase to the application in security.properties instead of on the 
## command line. This facilitates automated restarts, but makes protection of the system passphrase 
## dependent on the protection of the file system.
## Example: password
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: PathToSSLPlusJar 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Full path to the installed copy of sslplus_jsse.jar in the installation jar subdirectory. It is set by the 
## installation process and should not be changed unless directed by Customer Support.
## This property is used when running under Weblogic so that classes from this jar can be dynamically loaded 
## by communications adapters.  Weblogic distributes a different version of Certicom SSLPlus and you must use 
## the version supported by the application. The version supplied by Weblogic is not supported with the 
## application and may cause problems with the application.
## Example: [install_dir]/jar/sslplus/4_0_3_engdrop/sslplus_jsse.jar
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: PathToECCPlusJar 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Full path to the installed copy of EccpressoAll.jar in the installation jar subdirectory. It is set by the 
## installation process and should not be changed unless directed by Customer Support.
## This property is used when running under Weblogic so that classes from this jar can be dynamically loaded 
## by communications adapters.  Weblogic distributes a different version of Certicom SSLPlus and there are 
## problems if the application tries to use the Weblogic version.
## Example: [install_dir]/jar/sslplus/4_0_3_engdrop/EccpressoAll.jar
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: OpsSymmetricAlgorithm 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Symmetric algorithm that is used internally for encrypting sensitive information at rest in the database 
## and in transit between the application components.
## Note: This value should not be changed unless directed by Customer Support.
## The other possible values are the aliases supported by the application wrapper classes as follows. These 
## other values need to be tested, however.
## Valid values (in FIPS mode):
## DESede (default)
## AES
## AES-192
## AES-255
## Valid values (in non-FIPS mode):
## DESede (default)
## AES
## AES-192
## AES-255
## DES
## RC2-40
## RC2-128
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: KeyStoreType 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Default keystore type used for storing asymmetric key pairs in the application database.
## Note: This value should not be changed unless directed by Customer Support.
## In principle, this can be any serializable keystore type that conforms to the Java Keystore API. However, 
## the only ones that have ever been used by the application are SCIKS and JKS. SCIKS is the default. SCIKS
## keystores are implemented by the application SCIKS provider and are based on PKCS12.
## Example: SCIKS
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: PasswordSymmetricAlg 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Symmetric algorithm that is used internally for encrypting sensitive information at rest in the database and 
## in transit between the application components.
## Note: This value should not be changed unless directed by Customer Support.
## The other possible values are the aliases supported by the application wrapper classes as follows. These 
## other values need to be tested, however.
## Valid values (in FIPS mode):
## DESede (default)
## AES
## AES-192
## AES-255
## Valid values (in non-FIPS mode):
## DESede (default)
## AES
## AES-192
## AES-255
## DES
## RC2-40
## RC2-128
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: DoCRLChecking 
## PROPERTY_GROUP: CRL Processing Service
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether to perform CRL checking.
## Valid values:
## true : Perform CRL checking. 
## false : Do not perform CRL checking.
## PROPERTY_VALUE
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LoadExpiredCRLs 
## PROPERTY_GROUP: CRL Processing Service
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether to load expired CRLs in case the main CRL web site is not available. 
## Indicates whether the CRL processing service accepts expired CRLs.
## To load expired CRL, uncomment the property value.
## The CRL Processing Service caches up to 
## one full and one delta CRL per issuer in the database. Normally, you should retrieve the next CRL from 
## the CA before the current CRL expires. 	
## Setting this property to true allows the CRL Processing Service to continue to accept the last CRL from 
## a CA in the database even if the CRL has expired. 
## Valid values:
## true : Load the expired CRL.
## false : (default) Do not load the expired CRL.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LoadUnsuppCritExtnCRLs 
## PROPERTY_GROUP: CRL Processing Service
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether the CRL processing service accepts CRLs with unsupported critical extensions. Strict 
## security practice requires that you not accept CRLs with unsupported critical extensions (see RFC 3280). 
## However, if there is a business or testing need to accept such CRLs, setting this property to true allows 
## you to do so. 
## Valid values:
## true : The CRL processing service accepts CRLs with unsupported critical extensions. 
## false : (default) The CRL processing service does not accept CRLs with unsupported critical extensions.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: TLSProviderPolicy 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Policy value that is supplied to instances of the Certicom TLSContext class by the application 
## communications infrastructure. This policy determines which cryptographic service providers are used for 
## which cryptographic operations.
## The security.properties file contains policies for use with software cryptography from Certicom and for use 
## with Eracom and nCipher hardware devices. The one entry for Eracom is fixed and provides the setting for 
## using the RSA key and operation on the device. The two nCipher settings are for different emphasis on what 
## algorithms are to be implemented by what provider. Either nCipher setting could be used, depending on your 
## needs.
## Example:
## TLS:*:ECMQV:P:.CT;TLS:MD:MD5:P:Certicom;TLS:MD:SHA1:P:Certicom;TLS:MAC:HmacMD5:P:Certicom;TLS:MAC:HmacSHA1:
## P:Certicom;TLS:SIG:MD2withRSA:P:Certicom;TLS:Cipher:RawRSA:P:Certicom;TLS:*:ECDH:P:Certicom;TLS:*:ECDSA:P:
## Certicom;TLS:Cipher:DESede:P:Certicom;TLS:Cipher:AES:P:Certicom;TLS:*:*:P:nCipherKM
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: SelfSignedCertSignatureProvider 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Security provider for the system to use when creating self-signed certificates. In principle, this can be 
## any Java security provider that supports digital signatures using RSA and SHA1. Certicom is the default.
## This value should not be changed unless directed by Customer Support.
## Example: Certicom
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: KeyStoreProviderMap 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Specifies information about which cryptographic service providers to use for cryptographic operations with 
## keys from which types of keystores.
## Note: This value should not be changed unless directed by Customer Support.
## In principle, a keystore provider map entry can be created for any Java keystore and security provider(s). 
## The keystore type and security provider(s) have to be able to work together. This value should not be 
## changed unless directed by Customer Support, except to add entries for Eracom virtual 
## providers for tokens other than the default. These should all have the form CRYPTOKI, ERACOM.n, true, 
## ERACOM.n, ERACOM.n, true, where n is the slot number for the token.
## The format of these entries is: 
## * keystore type
## * keystore provider
## * whether the alias matters in the keystore (true/false)
## * signature provider
## * encryption provider
## * key stored on HSM flag (true/false)
## The string null is an acceptable value and will be treated as though no provider has been specified.
## The following example shows how to use the ERACOM virtual provider in slot1 instead of slot0:
## KeyStoreProviderMap=SCIKS,SCIKS,false,Certicom,Certicom,false;nCipher.sworld,nCipherKM,false,nCipherKM,
## nCipherKM,true;CRYPTOKI,ERACOM.1,true,ERACOM.1,ERACOM.1,true
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: TLSProviderPolicy 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: WeakCipherSuite 
## PROPERTY_GROUP: SSL Customizable Setting
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Exportable cipher suites. The list shows the default used internally if this type of cipher suite 
## is enabled through the user interface.
## Note: This value should not be changed unless directed by Customer Support.
## Example: TLS_RSA_EXPORT_WITH_RC4_40_MD5,TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: StrongCipherSuite 
## PROPERTY_GROUP: SSL Customizable Setting
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Strong cipher suites. The list shows default suites used if this type of suite is enabled through 
## the user interface.
## Note: This value should not be changed unless directed by Customer Support.
## Example: TLS_RSA_WITH_RC4_128_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA, 
## \TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_3DES_EDE_CBC_MD5,TLS_RSA_WITH_RC4_128_MD5
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: AllCipherSuite 
## PROPERTY_GROUP: SSL Customizable Setting
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## All cipher suites that typically include weak and strong cipher suites. The list shows the defaults 
## suites used if enabled through the user interface. 
## Note: This value should not be changed unless directed by Customer Support. 
## Example: TLS_RSA_WITH_RC4_128_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,
## \TLS_RSA_WITH_3DES_EDE_CBC_SHA,TLS_RSA_WITH_3DES_EDE_CBC_MD5,TLS_RSA_WITH_RC4_128_MD5,
## TLS_RSA_WITH_DES_CBC_SHA,\TLS_RSA_EXPORT_WITH_RC4_40_MD5,TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: TRUSTED_CERT_INFO_store 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: TRUSTED_CERT_INFO_delete 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: TRUSTED_CERT_INFO_update 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: TRUSTED_CERT_INFO_view 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CERTS_AND_PRI_KEY_store 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CERTS_AND_PRI_KEY_delete 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CERTS_AND_PRI_KEY_update 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CERTS_AND_PRI_KEY_view 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CA_CERT_INFO_store 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CA_CERT_INFO_delete 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CA_CERT_INFO_update 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CA_CERT_INFO_view 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
##
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: componentMap 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Path to the feature set file used by the system. This value is set by the installation and should not be 
## changed unless directed by Customer Support.
## Example: [install_dir]/bin/FeatureSet.xml
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: oldLicenseSetDir 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Directory to save old license files to when a new license is added.
## Example: [install_dir]/logs
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: nextExec 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Interval (in milliseconds) at which license expiration checking occurs. 
## Example: 3600000
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: emailServer 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## E-mail server to which to send license expiration notifications. This is set during installation. This 
## value can be the hostname or IP address of any SMTP-compliant mail server running on port 25 to which the 
## application can connect. 
## Example: mail.stercomm.com
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: emailRecipients 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## The e-mail addresses to which to send license expiration notifications. This is set during 
## installation.
## Example: SI_IDEV@stercomm.com
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: emailNotificationInterval 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Interval in hours at which to send license expiration notification messages.
## Example: 24
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: sendEmail 
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether to send license expiration notification messages.
## Valid values:
## true : (default) Send license expiration notification messages.
## false : Do not send license expiration notification messages.
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: expiredNotifyTimes 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## The number of the days that the expired license e-mail notification will be sent.
## Maximum number of license expiration notification messages to send.  The upper bound for this number 
## seems to be that for an integer in Java or 2147483647.
## Example: 14
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: ssl_client_auth_logging 
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## SSL CLient Authentication Logging
## Level of certificate chain to be logged.
## Valid values:
## all  : Log all SSL client authentication with the complete certificate chain.
## none : Do not log any SSL client authentication information in the Authentication log.
## <n>  : Restrict ssl client auth certificate chain to n levels in the log. (n > 0)
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_AUTHENTICATION_ENABLED 
## PROPERTY_GROUP: LDAP authentication configuration
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether to enable LDAP authentication.
## Valid values:
## true : Enable LDAP authentication.
## false : (default) Do not enable LDAP authentication.
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_JNDI_CONTEXT_FACTORY
## PROPERTY_GROUP: LDAP authentication configuration - JNDI parameter
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Class that implements the JNDI context factory.
## Example: com.sun.jndi.ldap.LdapCtxFactory
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_HOST 
## PROPERTY_GROUP: LDAP authentication configuration - JNDI parameter
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## LDAP host URL.
## Example: ldap://acme.inc.com:636
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_SECURITY_TYPE 
## PROPERTY_GROUP: LDAP authentication configuration - JNDI parameter
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Authentication method.
## Example: simple
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_PRINCIPLE 
## PROPERTY_GROUP: LDAP authentication configuration - JNDI parameter
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Administrator's or manager's domain name.
## Example: cn=Manager, dc=acme, dc=inc, dc=com
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_CREDENTIALS 
## PROPERTY_GROUP: LDAP authentication configuration - JNDI parameter
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Password used to authenticate the principal.
## Example: SecretPassword
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_SECURITY_PROTOCOL 
## PROPERTY_GROUP: LDAP authentication configuration - JNDI parameter
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## LDAP security protocol.
## Example: ssl
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_USER_PASSWORD_ATTRIBUTE 
## PROPERTY_GROUP: LDAP authentication configuration - search parameter for user password
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## User password attribute.
## Example: userPassword
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_SEARCH_ROOT 
## PROPERTY_GROUP: LDAP authentication configuration - search parameter for user password
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Search root for authenticating the user.
## Example: dc = acme, dc = inc, dc = com
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_SEARCH_FILTER_PATTERN 
## PROPERTY_GROUP: LDAP authentication configuration - search parameter for user password
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Search filter.
## Example: (uid=<userid>)
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_AUTHENTICATE_WITH_USER_BIND 
## PROPERTY_GROUP: LDAP authentication configuration - search parameter for user password
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether the user bind operation is used to authenticate the user.
## Valid values:
## true : The user bind operation is used to authenticate the user.
## false : The user bind operation is not used to authenticate the user.
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_SECURITY_TRUSTSTORE 
## PROPERTY_GROUP: LDAP authentication configuration - Optional SSL (JSSE) Java system property 
## for locating and using the trustStore and the keyStore. 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Location of the trusted certificate store file.
## Example: /home/applications/properties/cacerts
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_SECURITY_TRUSTSTORE_PASSWORD 
## PROPERTY_GROUP: LDAP authentication configuration - Optional SSL (JSSE) Java system property
## for locating and using the trustStore and the keyStore.
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Password for the trusted store password.
## Example: changeit
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_SECURITY_KEYSTORE 
## PROPERTY_GROUP: LDAP authentication configuration - Optional SSL (JSSE) Java system property
## for locating and using the trustStore and the keyStore.
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Location of keystore file.
## Example: /home/applications/properties/keystore
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: LDAP_SECURITY_KEYSTORE_PASSWORD 
## PROPERTY_GROUP: LDAP authentication configuration - Optional SSL (JSSE) Java system property
## for locating and using the trustStore and the keyStore.
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Keystore password.
## Example: password
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: SSO_AUTHENTICATION_ENABLED 
## PROPERTY_GROUP: SSO Authentication Configuration
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether to enable SSO authentication.
## Valid values:
## true : Enable SSO authentication.
## false : (default) Do not enable SSO authentication. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: SSO_USER_HEADER 
## PROPERTY_GROUP: SSO Authentication Configuration
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## HTTP header variable that contains externally authenticated user ID.
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: SSO_PAGE_AUTHENTICATION_ENABLED 
## PROPERTY_GROUP: SSO Authentication Configuration
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether to enable SSO authentication on each page. To use, set SSO_AUTHENTICATION_ENABLE=true. 
## Valid values:
## true : Enable SSO authentication on each page.
## false : (default) Do not enable SSO authentication on each page.
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: SSO_AUTHENTICATION_CLASS.<n>
## PROPERTY_GROUP: SSO Authentication Configuration
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## List of SSOProvider classes that are supplied to use. If SSO Authentication is enabled, there should be at least  
## one class. 
## The following is the default one that Application supplies: 
## SSO_AUTHENTICATION_CLASS.1=<SSOProvider Class 1> Will try to use this first.
## SSO_AUTHENTICATION_CLASS.2=<SSOProvider Class 2> Will try to use this if first one failed. 
## SSO_AUTHENTICATION_CLASS.3=<SSOProvider Class 3> Will try to use this if second one failed, too.
## SSO_AUTHENTICATION_CLASS.<n>=<SSOProvider Class n> Will try to use this if all first n-1 classes failed.
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: #SSO_FORWARD_URL.[session].LOGOUT 
## PROPERTY_GROUP: SSO Authentication Configuration
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## The http address of the page where to redirect the user after SSO user logout from a session (AFT, MAILBOX, 
## DASHBOARD, etc.).  Specify the SSO Server external page for each of the cases.
## Example: SSO_FORWARD_URL.MAILBOX.LOGOUT=http://sterlingcommerce.com
## After SSO user logout from Mailbox, instead of displaying the Mailbox login screen, display the Sterling 
## Commerce web page.
## Valid values:
## SSO_FORWARD_URL.AFT.LOGOUT       : The http of the page where to redirect the user after SSO user logout 
##                                    from an AFT session.
## SSO_FORWARD_URL.MYAFT.LOGOUT     : The http of the page where to redirect the user after SSO user logout 
##                                    from a MyAFT session.
## SSO_FORWARD_URL.MAILBOX.LOGOUT   : The http of the page where to redirect the user after SSO user logout 
##                                    from a MAILBOX session.
## SSO_FORWARD_URL.WS.LOGOUT        : The http of the page where to redirect the user after SSO user logout 
##                                    from a WS session.
## SSO_FORWARD_URL.DASHBOARD.LOGOUT : The http of the page where to redirect the user after SSO user logout 
##                                    from a DASHBOARD session.
## SSO_FORWARD_URL.LOGOUT           : (default) The http of the page want to redirect to after SSO user logout 
##                                    in general if don't know source. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: #SSO_FORWARD_URL.[session].GIS_TIMEOUT 
## PROPERTY_GROUP: SSO Authentication Configuration
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## The http address of the page where to redirect the SSO user after timeout during a session (AFT, MAILBOX, 
## DASHBOARD, etc.).  Specify the SSO Server external page for each of the cases.
## Example: SSO_FORWARD_URL.MAILBOX.GIS_TIMEOUT=http://sterlingcommerce.com
## After SSO User logout from Mailbox, instead of displaying the Mailbox login screen, display the Sterling 
## Commerce web page.
## Valid values:
## SSO_FORWARD_URL.AFT.GIS_TIMEOUT       : The http of the page where to redirect the SSO user after timeout 
##                                         during an AFT session.
## SSO_FORWARD_URL.MYAFT.GIS_TIMEOUT     : The http of the page where to redirect the SSO user after timeout 
##                                         during a MyAFT session.
## SSO_FORWARD_URL.MAILBOX.GIS_TIMEOUT   : The http of the page where to redirect the SSO user after timeout 
##                                         during a MAILBOX session.
## SSO_FORWARD_URL.WS.GIS_TIMEOUT        : The http of the page where to redirect the SSO user after timeout 
##                                         during a WS session.
## SSO_FORWARD_URL.DASHBOARD.GIS_TIMEOUT : The http of the page where to redirect the SSO user after timeout 
##                                         during a DASHBOARD session.
## SSO_FORWARD_URL.GIS_TIMEOUT           : (default) The http of the page where to redirect the SSO user after 
##                                         timeout if you don't know source. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: #SSO_FORWARD_URL.[session].VALIDATION_FAILED 
## PROPERTY_GROUP: SSO Authentication Configuration
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## The http address of the page where to redirect the SSO user on validation/authentication failure at login 
## or page validation (for AFT, MAILBOX, DASHBOARD, etc.).
## Example: SSO_FORWARD_URL.MAILBOX.VALIDATION_FAILED =http://sterlingcommerce.com
## After SSO User validation/authentication failure for a MAILBOX session, instead of displaying the Mailbox 
## login screen, display web page.
## Valid values:
## SSO_FORWARD_URL.AFT.VALIDATION_FAILED       : The http of the page where to redirect the SSO user on 
##                                               validation/authentication failure for an AFT session.
## SSO_FORWARD_URL.MYAFT.VALIDATION_FAILED     : The http of the page where to redirect the SSO user on 
##                                               validation/authentication failure for a MyAFT session.
## SSO_FORWARD_URL.MAILBOX.VALIDATION_FAILED   : The http of the page where to redirect the SSO user on 
##                                               validation/authentication failure for a MAILBOX session.
## SSO_FORWARD_URL.WS.VALIDATION_FAILED        : The http of the page where to redirect the SSO user on 
##                                               validation/authentication failure for a WS session.
## SSO_FORWARD_URL.DASHBOARD.VALIDATION_FAILED : The http of the page where to redirect the SSO user on 
##                                               validation/authentication failure for a DASHBOARD session.
## SSO_FORWARD_URL.VALIDATION_FAILED           : (default) The http of the page where to redirect the SSO user 
##                                               on validation/authentication failure if you don't know source. 
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: gis.system.keys 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## The keys that are to be warned if RemoveSystemCert.sh is used to delete existing keys in the 
## application.
## Example: UIKey,OpsDrv,OpsKey
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: exp_notice_mail 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Wording that is to be sent when an application license has expired.
## Example: 
## \n After you have a valid license, please run the following steps:\n (Note: If you are using 
## Windows, all shell scripts will have .cmd instead of .sh)  
## \n1. si_install/bin/AddLicenseSet.[sh|cmd] licenseFile\n2. restart the product\n\nImportant
##  note: some components may not run on expired licenses.\n\nThank you
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: ENC_DECR_DOCS 
## PROPERTY_GROUP: Document encryption/decryption
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Indicates whether to encrypt documents in the file system or in the database. These values are case 
## sensitive.
## Valid values:
## ENC_ALL : Encrypt documents both in the database and in the file system.
## ENC_DB : Encrypt documents in the database.
## ENC_FS : Encrypt documents in the file system.
## NONE : Do not encrypt documents in the database or the file system.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CERT_NAME 
## PROPERTY_GROUP: Document encryption/decryption
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Name of a system certificate to use to encrypt documents. The public key of this certificate is used to 
## encrypt symmetric document encryption keys.
## This can be a self-signed system certificate. It should be a 1024 or 2048-bit RSA certificate (Sterling 
## Commerce.s self-signed certificates use RSA). You should use the ExportSystemCert.sh script to export 
## this certificate to a PKCS12 file and store a backup copy of it offline in a secure area so that you can 
## recover encrypted documents if the copy used by the system is damaged or lost.
## Example: doccrypto
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: ORIGINAL_CERT_NAME 
## PROPERTY_GROUP: Document encryption/decryption
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## The original value of CERT_NAME.
## Uncomment ORIGINAL_CERT_NAME if the system certificate was changed. This should only need to be done the 
## first time the certificate is changed. On subsequent changes to the system certificate, you do not have to 
## update this field.
## Example: doccrypto
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: FIPSMode 
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether FIPS (Federal Information Processing Standards) are used. 
## Valid values:
## true : (default) FIPS are used.
## false : FIPS are not used.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: FIPSProvider 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Provider for FIPS information.
## Example: Certicom
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: CerticomFIPSSignatureFile 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
##
## Example: /opt/SSFS_9.5/runtime/properties/FIPSsignature.txt
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: J2EEAppServer 
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Application server. If no application server is being used, use NOAPP.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: dbcrypt.default.cert 
## PROPERTY_GROUP: Configuration for encrypting data in the database
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Name of the certificate to use.
## Example: DefDBCrypt
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: dbcrypt.default.maxkeyuse 
## PROPERTY_GROUP: Configuration for encrypting data in the database
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Number of times a key can be used before being discarded and recreated.
## Example: 10000
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: dbcrypt.default.maxlifespan 
## PROPERTY_GROUP: Configuration for encrypting data in the database
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Number of seconds the key will remain in use.
## Example: 10800
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: dbcrypt.default.algorithm 
## PROPERTY_GROUP: Configuration for encrypting data in the database
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Algorithm to use for encryption.
## Example: AES-128
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: jdk64bit 
## PROPERTY_TYPE: Boolean
## PROPERTY_DESCRIPTION
## Indicates whether 64-bit JDK is being used.
## Valid values:
## true : 64-bit JDK is being used.
## false : 64-bit JDK is not being used.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: passwordPolicyExtensionImpl
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## The name of the java class implementing extended validation on passwords.
## (For property value, see PROPERTY_VALUE_ALL section at end of file)
## PROPERTY_END

## PROPERTY_VALUE_ALL
PathToSSLPlusJar=/opt/SSFS_9.5/runtime/jar/sslplus/4_0_3_engdrop/sslplus_jsse.jar
PathToECCPlusJar=/opt/SSFS_9.5/runtime/jar/sslplus/4_0_3_engdrop/EccpressoAll.jar

OpsSymmetricAlgorithm=DESede
KeyStoreType=SCIKS
PasswordSymmetricAlg=DESede

#CRL related key words
#To perform CRL checking, change the value to be true
DoCRLChecking=false
#To load expired CRL in case the main crl web site is not available, uncomment the following line
#LoadExpiredCRLs=true

#The following policy is for nCipher NetHSMs
#TLSProviderPolicy=TLS:MD:MD5:P:Certicom;TLS:MD:SHA1:P:Certicom;TLS:MAC:HmacMD5:P:Certicom;TLS:MAC:HmacSHA1:P:Certicom;TLS:SIG:MD2withRSA:P:Certicom;TLS:Cipher:RawRSA:P:Certicom;TLS:*:ECDH:P:Certicom;TLS:*:ECDSA:P:Certicom;TLS:*:*:P:nCipherKM

#TLSProviderPolicy=TLS:*:ECMQV:P:.CT;TLS:MD:MD5:P:Certicom;TLS:MD:SHA1:P:Certicom;TLS:MAC:HmacMD5:P:Certicom;TLS:MAC:HmacSHA1:P:Certicom;TLS:SIG:MD2withRSA:P:Certicom;TLS:Cipher:RawRSA:P:Certicom;TLS:*:ECDH:P:Certicom;TLS:*:ECDSA:P:Certicom;TLS:Cipher:DESede:P:Certicom;TLS:Cipher:AES:P:Certicom;TLS:*:*:P:nCipherKM
SelfSignedCertSignatureProvider=Certicom
#The format of these entries is keystore type, keystore provider, whether the alias matters in the keystore (true/false),
#signature provider, encryption provider, key stored on HSM flag (true/false). 
#The string null is an acceptable value and will be treated as though no provider has been specified.
#The following one shows how to use the ERACOM virtual provider in the slot1 instead of slot0
#KeyStoreProviderMap=SCIKS,SCIKS,false,Certicom,Certicom,false;nCipher.sworld,nCipherKM,false,nCipherKM,nCipherKM,true;CRYPTOKI,ERACOM.1,true,ERACOM.1,ERACOM.1,true
KeyStoreProviderMap=SCIKS,SCIKS,false,Certicom,Certicom,false;nCipher.sworld,nCipherKM,false,nCipherKM,nCipherKM,true;CRYPTOKI,ERACOM,true,ERACOM,ERACOM,true
#TLSProviderPolicy=TLS:*:ECMQV:P:.CT;TLS:MD:MD5:P:Certicom;TLS:MD:SHA1:P:Certicom;TLS:MAC:HmacMD5:P:Certicom;TLS:MAC:HmacSHA1:P:Certicom;TLS:SIG:MD2withRSA:P:Certicom;TLS:Cipher:RawRSA:P:nCipherKM;TLS:Cipher:RSA:P:nCipherKM;TLS:*:ECDH:P:Certicom;TLS:*:ECDSA:P:Certicom;TLS:*:*:P:NcipherKM
#policy setting that will work for ERACOM provider/device
#TLSProviderPolicy= TLS:*:ECMQV:P:.CT;TLS:SIG:MD2withRSA:P:ERACOM;TLS:Cipher:RawRSA:P:ERACOM;TLS:*:RSA:P:ERACOM;TLS:*:*:P:Certicom



#SSL Customizable Settings
#WeakCipherSuite=TLS_RSA_EXPORT_WITH_RC4_40_MD5,TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
#StrongCipherSuite=TLS_RSA_WITH_RC4_128_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,\
                   TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_3DES_EDE_CBC_MD5, TLS_RSA_WITH_RC4_128_MD5
#AllCipherSuite=TLS_RSA_WITH_RC4_128_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,\
                   TLS_RSA_WITH_3DES_EDE_CBC_SHA,TLS_RSA_WITH_3DES_EDE_CBC_MD5,TLS_RSA_WITH_RC4_128_MD5,TLS_RSA_WITH_DES_CBC_SHA,\
                   TLS_RSA_EXPORT_WITH_RC4_40_MD5,TLS_RSA_EXPORT_WITH_DES40_CBC_SHA

TRUSTED_CERT_INFO_store = 1
TRUSTED_CERT_INFO_delete = 2
TRUSTED_CERT_INFO_update = 4
TRUSTED_CERT_INFO_view = 8
CERTS_AND_PRI_KEY_store = 16
CERTS_AND_PRI_KEY_delete = 32
CERTS_AND_PRI_KEY_update = 64
CERTS_AND_PRI_KEY_view = 128
CA_CERT_INFO_store = 256
CA_CERT_INFO_delete = 512
CA_CERT_INFO_update = 1024
CA_CERT_INFO_view = 2048
componentMap=/opt/SSFS_9.5/runtime/bin/FeatureSet.xml
oldLicenseSetDir=/opt/SSFS_9.5/runtime/logs
nextExec=3600000
emailServer=&SI_ADMIN_SMTP_HOST;
emailRecipients=&SI_ADMIN_MAIL_ADDR;
# number of the hours
emailNotificationInterval=24
#flag to indicate if you like to get email notification about license
sendEmail=true
# the number of the days that the expired license email notification will be sent
expiredNotifyTimes=14

## SSL CLient Authentication Logging
#
# options 
#
# all - log all ssl client authentication with the complete certificate chain
# none - do not log any ssl client authentication information in the Authentication log
# <n> - restrict ssl client auth certificate chain to n levels in the log. (n > 0)
#
ssl_client_auth_logging=all

## LDAP Authentication configuration


## enable ldap authentication  (true, false) default=false
#LDAP_AUTHENTICATION_ENABLED=true

## jndi parameters for ldap connections
#LDAP_JNDI_CONTEXT_FACTORY=com.sun.jndi.ldap.LdapCtxFactory
#LDAP_HOST=ldap://acme.inc.com:636
#LDAP_SECURITY_TYPE=simple
#LDAP_PRINCIPLE=cn=Manager,dc=acme,dc=inc,dc=com
#LDAP_CREDENTIALS=SecretPassword
#LDAP_SECURITY_PROTOCOL=ssl

## search parameters for user password
#LDAP_USER_PASSWORD_ATTRIBUTE=userPassword
#LDAP_SEARCH_ROOT=dc=acme,dc=inc,dc=com
#LDAP_SEARCH_FILTER_PATTERN=(uid=<userid>)
#LDAP_AUTHENTICATE_WITH_USER_BIND=false

## optional ssl (jsse) java system properties for locating and using the trustStore and the keyStore
#LDAP_SECURITY_TRUSTSTORE=/home/applications/properties/cacerts
#LDAP_SECURITY_TRUSTSTORE_PASSWORD=changeit
#LDAP_SECURITY_KEYSTORE=/home/applications/properties/keystore
#LDAP_SECURITY_KEYSTORE_PASSWORD=password

#################################################
## SSO Authentication configuration

## enable sso authentication  (true, false) default=false
#SSO_AUTHENTICATION_ENABLED=true

## http header variable that contains externally authenticated userid
#SSO_USER_HEADER=SM_USER

## enable sso authentication on each Page (true, false) default=false (To use need to set SSO_AUTHENTICATION_ENABLE=true) 
#SSO_PAGE_AUTHENTICATION_ENABLED=true

## List of SSOProvider Classes that are supplied to use - If SSO Authentication is enable, should have at least  
## one class, the following is the default one that we supplied. 
##    SSO_AUTHENTICATION_CLASS.1= <SSOProvider Class 1> Will try to use this first
##    SSO_AUTHENTICATION_CLASS.2= <SSOProvider Class 2> Will try to use this if first one failed 
##    SSO_AUTHENTICATION_CLASS.3= <SSOProvider Class 3> Will try to use this if second one failed too
##    SSO_AUTHENTICATION_CLASS.<n>= <SSOProvider Class n> Will try to use this if all first n-1 classes failed
#SSO_AUTHENTICATION_CLASS.1=com.sterlingcommerce.woodstock.security.authentication.SSOProviderDefault

## External Page for SSO when Logout (Specify the SSO Server external page for each of the cases) 
##     Example: SSO_FORWARD_URL.MAILBOX.LOGOUT=http://sterlingcommerce.com
##              After SSO User logout from Mailbox, instead of display the Mailbox Login Screen, 
##              display Web page.
#SSO_FORWARD_URL.AFT.LOGOUT=The http of the page want to redirect to after SSO user logout from AFT session
#SSO_FORWARD_URL.MYAFT.LOGOUT=The http of the page want to redirect to after SSO user logout from MyAFT session
#SSO_FORWARD_URL.MAILBOX.LOGOUT=The http of the page want to redirect to after SSO user logout from MAILBOX session
#SSO_FORWARD_URL.WS.LOGOUT=The http of the page want to redirect to after SSO user logout from WS session
#SSO_FORWARD_URL.DASHBOARD.LOGOUT=The http of the page want to redirect to after SSO user logout from DASHBOARD session
## Default handling for LOGOUT if don't know source 
#SSO_FORWARD_URL.LOGOUT=The http of the page want to redirect to after SSO user logout in general if don't know source 

## External Page for SSO when Timeout (Specify the SSO Server External page for each of the case)
#SSO_FORWARD_URL.AFT.GIS_TIMEOUT=
#SSO_FORWARD_URL.MYAFT.GIS_TIMEOUT=
#SSO_FORWARD_URL.MAILBOX.GIS_TIMEOUT=
#SSO_FORWARD_URL.WS.GIS_TIMEOUT=
#SSO_FORWARD_URL.DASHBOARD.GIS_TIMEOUT=
## Default handling for TIMEOUT if don't know source 
#SSO_FORWARD_URL.GIS_TIMEOUT=

## External Page for SSO on Validation/Authentication failure (SSO User Validation Failed - At login or Page Validation) 
#SSO_FORWARD_URL.AFT.VALIDATION_FAILED=
#SSO_FORWARD_URL.MYAFT.VALIDATION_FAILED=
#SSO_FORWARD_URL.MAILBOX.VALIDATION_FAILED=
#SSO_FORWARD_URL.WS.VALIDATION_FAILED=
#SSO_FORWARD_URL.DASHBOARD.VALIDATION_FAILED=
## Default handling for VALIDATION FAILED if don't know source 
#SSO_FORWARD_URL.VALIDATION_FAILED=

#####################################################

gis.system.keys=UIKey,OpsDrv,OpsKey


exp_notice_mail=\n After you have a valid license, please run the following steps:\n (Note: if you are in windows version , all shell scripts will have .cmd instead of .sh) \n1. si_install/bin/AddLicenseSet.[sh|cmd]  licenseFile\n2. restart the product\n\nImportant note: some components may not run on expired licenses.\n\nThank you

#Document encryption/decryption settings
#ENC_DECR_DOCS=ENC_FS
ENC_DECR_DOCS=NONE
CERT_NAME=doccrypto
#ORIGINAL_CERT_NAME=doccrypto
# uncomment ORIGINAL_CERT_NAME if the system certificate was changed
# change the value to the original value of CERT_NAME.
# This should only need to be done the first time the certificate is changed.
# On subsequent changes to the system certificate, you do not have to update this field.

FIPSProvider=Certicom
CerticomFIPSSignatureFile= /opt/SSFS_9.5/runtime/properties/FIPSsignature.txt

J2EEAppServer=websphere

## Configuration for encrypting data in the database
# Name of the certificate to use
dbcrypt.default.cert=DefDBCrypt
# Number of times a key can be used before being discarded and recreated
dbcrypt.default.maxkeyuse=10000
# Number of seconds the key will remain in use
dbcrypt.default.maxlifespan=10800
# Algorithm to use for encryption.
dbcrypt.default.algorithm=AES-128

jdk64bit=true

#############################################################################
## Password Policy Extension
# Specify the name of the java class implementing extended validation of
# passwords
#############################################################################
#passwordPolicyExtensionImpl=

# What key size to use for RSA Export Keys.  Eracom NetHSM requires a value of 1024, some other HSMs are very slow with a value other than 512.
RsaExportKeySize=512

#make this property as false to eliminate CBC Ciphers
supportCBCCiphers=true
