## Licensed Materials - Property of IBM
## IBM Sterling Selling and Fulfillment Suite
## (C) Copyright IBM Corp. 2001, 2013 All Rights Reserved.
## US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

## PROPERTY_FILE_NAME
## management.properties.in (for initialization)
## management.properties (for operations)
## PROPERTY_FILE_DESCRIPTION
## Any property can be encrypted or decrypted by implementing the 
## YCPEncrypter java interface. See Application Javadocs for details about
## this interface.
## 
## To execute the class that implements the YCPEncrypter interface you
## must set the yfs.propertyencrypter.class property in the yfs.properties
## file. This class must be accessible through the CLASSPATH environment
## variable.
## 
## In order to trigger decryption, you must append .encrypted to any
## property you want to decrypt in the management.properties file.

## PROPERTY_START
## PROPERTY_NAME: yfs.remote.pingtime
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## PingTime in seconds the Integration/AgentServer will use
## to ping the RemoteManager to see if its connection is still valid.
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yfs.remote.reconnecttime
## PROPERTY_TYPE: Integer
## PROPERTY_DESCRIPTION
## Reconnect Time in seconds the Integration/AgentServer will use
## to attemt reconnect tries if the initial registration with the
## RemoteManager fails
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yfsjndi.datasource.java.naming.[value]
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## Set these properties for the JNDI lookup used for systems management.
## The provider url should point to the admin server for WebLogic and to the relevant
## place for WebSphere and JBoss.
## Any security related properties should be set by uncommenting the
## relevant properties below.
## 
## Additional properties can be added to this list by prefixing the standard java property
## with <yfsjndi.jmx>. For example if you need to add a property when accessing the provider url
## called java.naming.factory.control to this list, then add an entry in this file called 
## yfsjndi.jmx.java.naming.factory.control=<property value>
## 
## The security credentials needed while looking up the DataSource using JNDI.
## Additional properties can be added to this list by prefixing the standard java property
## with <yfsjndi.datasource>. For example if you need to add a property when accessing the provider url
## called java.naming.factory.control to this list, then add an entry in this file called 
## yfsjndi.datasource.java.naming.factory.control=<property value>
## 
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_START
## PROPERTY_NAME: yfsjndi.<AnyUserDefinedAlias>
## PROPERTY_TYPE: String
## PROPERTY_DESCRIPTION
## The user can set security related properties here for Queue lookups
## If the JNDI for JMS queues is maintained by a particular server, set the
## the following properties for authenticating any queue lookups. The user
## can name the JNDI provider using the yfsjndi.<AnyUserDefinedAlias> property.
## For example: a providee url t3://localhost:7001 may be set to yfsjndi.ProductionServerQueuesProviderURL.
## Please note <ProductionServerQueuesProviderURL> in " yfsjndi.ProductionServerQueuesProviderURL" is 
## user defined and can be set to any meaningful name. All subsequent properties in the file with prefix 
## yfsjndi.ProductionServerQueuesProviderURL will be plugged into the context before doing the JNDI lookup.
## 
## Additional properties can be added to this list by prefixing the standard java property
## with yfsjndi.<AnyUserDefinedAlias>. For example if you need to add a property when accessing the provider url
## called java.naming.factory.control to this list, then add an entry in this file called 
## yfsjndi.datasource.java.naming.factory.control=<property value>
## 
## (For property value, see PROPERTY_VALUE_ALL section at end of file) 
## PROPERTY_END

## PROPERTY_VALUE_ALL

#yfs.remote.pingtime=
#yfs.remote.reconnecttime=

#yfsjndi.datasource.java.naming.security.principal=
#yfsjndi.datasource.java.naming.security.credentials=
#yfsjndi.datasource.java.naming.referral=
#yfsjndi.datasource.java.naming.security.protocol=

#yfsjndi.<AnyUserDefinedAlias>=t3://localhost:7001
#yfsjndi.<AnyUserDefinedAlias>.java.naming.security.principal=
#yfsjndi.<AnyUserDefinedAlias>.java.naming.security.credentials=
#yfsjndi.<AnyUserDefinedAlias>.java.naming.referral=
#yfsjndi.<AnyUserDefinedAlias>.java.naming.security.protocol=

