<!-- Licensed Materials - Property of IBM IBM Sterling Selling and Fulfillment 
	Suite - Foundation (C) Copyright IBM Corp. 2007, 2012 All Rights Reserved. 
	US Government Users Restricted Rights - Use, duplication or disclosure restricted 
	by GSA ADP Schedule Contract with IBM Corp. -->
<xsl:stylesheet version="2.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions"
	xmlns:java="http://xml.apache.org/xslt/java" xmlns:fopUtil="com.yantra.pca.ycd.fop.YCDFOPUtils"
	exclude-result-prefixes="java">
	<xsl:import href="/template/prints/ycd/xsl/CommonTemplates_HTML.xsl"/>
	<xsl:output method="html" encoding="UTF-8" indent="yes" />
	<xsl:variable name="ireport.scriptlethandling" select="2" />
	<xsl:variable name="ireport.encoding" select="UTF-8" />

	<xsl:variable name="locale">
		<xsl:value-of
			select="/MultiApi/API[@Name='getOrganizationHierarchy']/Output/Organization/@LocaleCode" />
	</xsl:variable>

	<xsl:template match="/">
		<xsl:apply-templates select="/MultiApi" />
	</xsl:template>
	<xsl:template match="MultiApi">
		<html>
			<xsl:attribute name="lang">
				<xsl:value-of select="$locale" />
			</xsl:attribute>
			<body>
				<style>
					<xsl:text disable-output-escaping="yes">

						body {
							font-family: "HelvNeueRomanforIBM", Helvetica, Arial, Tahoma, Verdana, sans-serif;
							font-size: 12px;
							margin: 10px 0px;
						}
				
						table {
							font-size: 12px;
						}
				
						div.page {
							width: 100%;
						}
						div.page:not(:last-child) {
							page-break-after: always;
						}
						div.already_printed, div.already_printed table {
							color: #666;
						}
						
						.storedetails {
						width: 100%;
						}
						.storedetails td {
							width: 50%;
						}
						.storedetails td:first-child{
							font-size: 40px;
							color: #C8C8F8;
						}
				
						.storedetails .storeaddress {
							float: right;
						}
				
						.storedetails .storeaddress .company {
							font-weight: bold;
						}
					
						.title {
							text-align: center;
							font-size: 25px;
							margin-bottom: 10px;
							background-color: #C8C8F8;
							padding: 2px 0px;
						}
				
						.headerinformation {
							width: 100%;
						}
				
						.headerinformation .headerrow > td {
							width: 50%;
							vertical-align: top;
						}
				
						.headerinformation .headerrow td+td table {
							float: right;
						}
				
						.headerinformation tr td table{
							width: 80%;
						}
				
						.headerinformation tr td table td:first-child{
							width:10em;
						}
				
						.addressheader th{
							background-color: C8C8F8;
							text-align: left;
							padding: 5px;
						}
				
						.addressdetails td > div {
							padding: 1px 5px;
						}
				
						.addressdetails td div {
							padding-top:1px;
							padding-bottom: 1px;
						}
						
						.orderheader {
						padding-top: 10px;
						width:100%;
						}
						.orderheader table {
							border-spacing: 0px 5px;
						}
				
						.orderheader table tr td:first-child {
							font-weight: bold;
							padding-right: 20px;
							padding-left: 5px;
						}
				
						.orderheader .currentdate {
							vertical-align:top;
						}
				
						.orderheader .currentdate table{
							float: right;
						}
				
						.orderheader .addressheader {
							background-color: C8C8F8;
						}
				
						.orderheader .addressheader td{
							padding: 5px;
						}
				
						.orderheader table tr.addressdetails td{
							font-weight: normal;
						}
					
						table.shipmentlines {
							width: 99%;
							margin-left: 5px;
							margin-top: 10px;
						}
				
						table.shipmentlines, table.shipmentlines th, table.shipmentlines td {
							border:1px solid;
							border-collapse: collapse;
							padding: 2px 2px;
						}
				
						table.shipmentlines th {
							padding: 5px 2px;
							background-color:#DDDDDD;
						}
				
						.footer {
							padding-top: 10px;
							bottom:0px;
							text-align:center;
							position:absolute;
							width:100%;
				
						}
				</xsl:text>
				</style>
				<xsl:for-each select="API[(normalize-space(@Name) = &quot;getShipmentLineList&quot;)]">
					<div class="page">
						<xsl:apply-templates select="Output/Shipment" />						
					</div>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>

	<xsl:template match="Shipment">
		<xsl:apply-templates select="ShipNode" />
			<div class="title"><xsl:value-of select="fopUtil:getLocalizedString('PACKING SLIP',$locale)" /></div>
			<table class="orderheader">
				<tr>
					<td>
						<table>
							<tr>
								<td><xsl:value-of select="fopUtil:getLocalizedString('Order Number:',$locale)" /></td>
							<td><xsl:value-of select="fopUtil:getDisplayOrderNo(@DisplayOrderNo)" /></td>
							</tr>
							<tr>
								<td><xsl:value-of select="fopUtil:getLocalizedString('Carrier:',$locale)" /></td>
								<td><xsl:value-of select="@SCAC" /></td>
							</tr>
							<tr>
								<td><xsl:value-of select="fopUtil:getLocalizedString('Freight Terms:',$locale)" /></td>
								<td><xsl:value-of select="@FreightTerms" /></td>
							</tr>
						</table>
					</td>
					<td />
					<td class="currentdate">
						<table>
							<tr>
								<td><xsl:value-of select="fopUtil:getLocalizedString('Current Date:',$locale)" /></td>
							<td><xsl:value-of select="fopUtil:getCurrentDate($locale,'true')" /></td>
							</tr>
						</table>
					</td>
				</tr>
			</table>
			<table class="headerinformation">
			<tr class="headerrow">
				<td>
					 <xsl:variable name="City">
						<xsl:if test="string-length(ToAddress/@City)">
							<xsl:value-of select="concat(ToAddress/@City,', ')" />
						</xsl:if>
					</xsl:variable>	 
					 <xsl:variable name="State">
						<xsl:if test="string-length(ToAddress/@State)">
							<xsl:value-of select="concat(ToAddress/@State,', ')" />
						</xsl:if>
					</xsl:variable> 
					<xsl:variable name="ZipCode" select="ToAddress/@ZipCode" />					
					<xsl:variable name="FormattedCityStateZipCodeStore">												
							<xsl:value-of select="concat($City, $State, $ZipCode)" />									
					</xsl:variable>
					<table>
						<tr class="addressheader"><th><xsl:value-of select="fopUtil:getLocalizedString('Ship To',$locale)" /></th></tr>
						<tr class="addressdetails">
							<td>
								<div><xsl:value-of select="concat(ToAddress/@FirstName,' ',ToAddress/@LastName)" /></div>
								<div><xsl:value-of select="ToAddress/@Company" /></div>
								<div><xsl:value-of select="ToAddress/@AddressLine1" /></div>
								<div><xsl:value-of select="ToAddress/@AddressLine2" /></div>
								<div><xsl:value-of select="$FormattedCityStateZipCodeStore" /></div>
								<div><xsl:value-of select="ToAddress/@Country" /></div>
								<div><xsl:value-of select="ToAddress/@DayPhone" /></div>
								<div><xsl:value-of select="ToAddress/@EmailID" /></div>
							</td>
						</tr>
					</table>
				</td>
				<td>
					<xsl:variable name="billtoCustCity">
						<xsl:if test="string-length(BillToAddress/@City)">
							<xsl:value-of select="concat(BillToAddress/@City,', ')" />
						</xsl:if>
					</xsl:variable>
					<xsl:variable name="billtoCustState" >
						<xsl:if test="string-length(BillToAddress/@State)">
							<xsl:value-of select="concat(BillToAddress/@State,', ')" />
						</xsl:if>
					</xsl:variable>
					<xsl:variable name="billtoCustZipCode" select="BillToAddress/@ZipCode" />
					<xsl:variable name="FormattedBillToCityStateZipCode">
						<xsl:value-of select="concat($billtoCustCity,$billtoCustState,$billtoCustZipCode)" />
					</xsl:variable>
					<table>
						<tr class="addressheader"><th><xsl:value-of select="fopUtil:getLocalizedString('Bill To',$locale)" /></th></tr>
						<tr class="addressdetails">
							<td>
								<div><xsl:value-of select="concat(BillToAddress/@FirstName,' ',BillToAddress/@LastName)" /></div>
								<div><xsl:value-of select="BillToAddress/@Company" /></div>
								<div><xsl:value-of select="BillToAddress/@AddressLine1" /></div>
								<div><xsl:value-of select="BillToAddress/@AddressLine2" /></div>
								<div><xsl:value-of select="$FormattedBillToCityStateZipCode" /></div>
								<div><xsl:value-of select="BillToAddress/@Country" /></div>
								<div><xsl:value-of select="BillToAddress/@DayPhone" /></div>
								<div><xsl:value-of select="BillToAddress/@EmailID" /></div>
							</td>
						</tr>
					</table>
				</td>
			</tr>
		</table>
		
		<xsl:if test="count(Instructions/Instruction[@InstructionType='PACK']) &gt; 0">			 		
			<table style="width:100%;">
				<th style="text-align:left"><xsl:value-of select="fopUtil:getLocalizedString('Special Instructions',$locale)" /></th>
				<tr>
					<td>
						<ul>
							<xsl:for-each select="Instructions/Instruction[@InstructionType='PACK']">
								<li><xsl:value-of select="@InstructionText"/></li>
							</xsl:for-each>
						</ul>	
					</td>
				</tr>		
			</table>
		</xsl:if>
		
		<xsl:apply-templates select="ShipmentLines" />
	</xsl:template>

	<xsl:template match="ShipmentLines">
		<table class="shipmentlines">
			<thead>
				<tr>
					<th>
						<xsl:value-of select="fopUtil:getLocalizedString('Sl. No',$locale)" />
					</th>
					<th>
						<xsl:value-of select="fopUtil:getLocalizedString('Product Description',$locale)" />
					</th>
					<th>
						<xsl:value-of select="fopUtil:getLocalizedString('Ordered Quantity',$locale)" />
					</th>
					<th>
						<xsl:value-of select="fopUtil:getLocalizedString('Packed Quantity',$locale)" />
					</th>
				</tr>
			</thead>
			<xsl:for-each select="ShipmentLine">
				<tr>
					<xsl:variable name="i" select="position()" />
					<xsl:variable name="uom" select="@UnitOfMeasure" />
					<td>
						<xsl:value-of select="$i" />
					</td>
					<td>
						<xsl:choose>
							<xsl:when test="string-length(OrderLine/ItemDetails/PrimaryInformation/@ExtendedDisplayDescription)">
								<xsl:value-of select="OrderLine/ItemDetails/PrimaryInformation/@ExtendedDisplayDescription" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat(@ItemDesc,' (',@ItemID,')')"/>
							</xsl:otherwise>
						</xsl:choose>
						
					</td>
					<td style="text-align:right">
						<xsl:variable name="ordQty" select="@ActualQuantity" />
						<xsl:value-of select="concat(fopUtil:getFormattedDouble($ordQty,$locale),' ',/MultiApi/API[@Name='getItemUOMMasterList']/Output/ItemUOMMasterList/ItemUOMMaster[@UnitOfMeasure=$uom]/@Description)" />
					</td>
					<td style="text-align:right">
						<xsl:variable name="shpQty" select="@PackedQty" />
						<xsl:value-of select="concat(fopUtil:getFormattedDouble($shpQty,$locale),' ',/MultiApi/API[@Name='getItemUOMMasterList']/Output/ItemUOMMasterList/ItemUOMMaster[@UnitOfMeasure=$uom]/@Description)" />
					</td>
				</tr>
			</xsl:for-each>
		</table>
	</xsl:template>
</xsl:stylesheet>
