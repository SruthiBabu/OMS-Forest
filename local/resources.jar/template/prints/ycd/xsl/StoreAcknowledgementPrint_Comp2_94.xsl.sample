<?xml version="1.0" encoding="UTF-8" ?>
<!--
Licensed Materials - Property of IBM
IBM Sterling Call Center and Store
(C) Copyright IBM Corp. 2008, 2014 All Rights Reserved.
US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
-->
	<!--
	Document   : StoreAcknowledgementPrint_Comp1_94.xsl.sample
	Author     : Pradeep Kariyappa
	Description: This xsl is used to format the input xml to facilitate call to multiApi.
	-->
	
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:java="http://xml.apache.org/xslt/java"
	xmlns:fopUtil="com.yantra.pca.ycd.fop.YCDFOPUtils" exclude-result-prefixes="java">
	<xsl:import href="/template/prints/ycd/xsl/CommonTemplates_HTML.xsl"/>
	<xsl:output method="html" encoding="UTF-8" indent="yes" />
 	<xsl:variable name="ireport.scriptlethandling" select="2"/>
	<xsl:variable name="ireport.encoding" select="UTF-8"/>	
	
	<xsl:variable name="locale">
		<xsl:value-of select="/MultiApi/API[@Name='getOrganizationHierarchy']/Output/Organization/@LocaleCode" />
	</xsl:variable>
	
	<xsl:template match="/">
		<xsl:apply-templates select="/MultiApi" />
	</xsl:template>
	
	<xsl:template match="MultiApi">
		<html>
			<xsl:attribute name="lang">
				<xsl:value-of select="$locale" />
			</xsl:attribute>
			<body>
			<style>
				<xsl:text disable-output-escaping="yes">

					body {
						font-family: "HelvNeueRomanforIBM", Helvetica, Arial, Tahoma, Verdana, sans-serif;
						font-size: 12px;
						margin: 10px 0px;
					}
			
					table {
						font-size: 12px;
					}
			
					div.page {
						width: 100%;
					}
					div.page:not(:last-child) {
						page-break-after: always;
					}
					div.already_printed, div.already_printed table {
						color: #666;
					}
					
					.storedetails {
						width: 100%;
					}
					.storedetails td {
						width: 50%;
					}
					.storedetails td:first-child{
						font-size: 40px;
						color: #C8C8F8;
					}
			
					.storedetails .storeaddress {
						float: right;
					}
			
					.storedetails .storeaddress .company {
						font-weight: bold;
					}
					
					.title {
						text-align: center;
						font-size: 25px;
						padding: 2px 0px;
						background-color: #C8C8F8;
					}
			
					.headerinformation {
						width: 100%;
					}
			
					.headerinformation td:first-child table td:first-child{
						font-weight: bold;
					}
			
					.headerinformation td+td table{
						float: right;
					}
					
					.orderheader {
						padding-top: 10px;
						width:100%;
						}
						.orderheader table {
							border-spacing: 0px 5px;
						}
				
						.orderheader table tr td:first-child {
							font-weight: bold;
							padding-right: 20px;
							padding-left: 5px;
						}
				
						.orderheader .currentdate {
							vertical-align:top;
						}
				
						.orderheader .currentdate table{
							float: right;
						}
				
						.orderheader .addressheader {
							background-color: C8C8F8;
						}
				
						.orderheader .addressheader td{
							padding: 5px;
						}
				
						.orderheader table tr.addressdetails td{
							font-weight: normal;
						}
						
					table.shipmentlines {
						width: 99%;
						margin-left: 5px;
						margin-top: 10px;
					}
			
					table.shipmentlines, table.shipmentlines th, table.shipmentlines td {
						border:1px solid;
						border-collapse: collapse;
						padding: 2px 2px;
					}
			
					table.shipmentlines th {
						padding: 5px 2px;
						background-color:#DDDDDD;
					}
			
					footer {
						padding-top: 10px;
						bottom:0px;
						text-align:center;
						position:absolute;
						width:100%;
			
					}


				</xsl:text>
			</style>
			<xsl:for-each select="API[(normalize-space(@Name) = &quot;getSortedShipmentDetails&quot;)]">
				<div class="page">
					
					<xsl:apply-templates select="Output/Shipment" />			
				</div>
			</xsl:for-each>
		</body>
		</html>
	</xsl:template>

	<xsl:template match="Shipment">
		<xsl:apply-templates select="ShipNode" />
		<div class="title"><xsl:value-of select="fopUtil:getLocalizedString('PICKUP ACKNOWLEDGEMENT',$locale)" /></div>	
		<table class="orderheader">
			<tr>
				<td>
					<table>
						<tr>
							<td>
								<xsl:value-of select="fopUtil:getLocalizedString('Order Number:',$locale)" />
							</td>
							<td>
								<xsl:value-of select="fopUtil:getDisplayOrderNo(@DisplayOrderNo)" />
							</td>
						</tr>					
						<!-- -->
						<tr>
							<td>
								<xsl:value-of select="fopUtil:getLocalizedString('Customer Name:',$locale)" />
							</td>
							<td>
								<xsl:value-of select="concat(ToAddress/@FirstName,' ',ToAddress/@LastName)"/>
							</td>
						</tr>	
					</table>
				</td>
				<td/>
				<td class="currentdate">
					<table>
						 <tr>
							<td>
								<xsl:value-of select="fopUtil:getLocalizedString('Pickup Date:',$locale)" />
							</td>
							<td>
								<xsl:value-of select="fopUtil:getCurrentDate($locale,'true')" />
							</td>
						</tr>
					</table>					
				</td>
			</tr>
		</table>	
		<xsl:apply-templates select="ShipmentLines" />
		
	</xsl:template>
	
	
	<xsl:template match="ShipmentLines">
		<table class="shipmentlines">
			<thead>
				<tr>
					<th>
						<xsl:value-of select="fopUtil:getLocalizedString('Sl. No',$locale)" />
					</th>
					<th>
						<xsl:value-of select="fopUtil:getLocalizedString('Product Description',$locale)" />
					</th>
					<th>
						<xsl:value-of select="fopUtil:getLocalizedString('Quantity',$locale)" />
					</th>				
					<th>
						<xsl:value-of select="fopUtil:getLocalizedString('Price',$locale)" />
					</th>					
				</tr>
			</thead>
			<xsl:for-each select="ShipmentLine">
				<xsl:variable name="lineqty" select="@Quantity">
		        </xsl:variable>
				<xsl:if test="$lineqty &gt; 0">
					<tr>
						<xsl:variable name="i" select="position()" />
						<td>
							<xsl:value-of select="$i" />
						</td>
						<td>
							<xsl:value-of select="OrderLine/ItemDetails/PrimaryInformation/@ExtendedDisplayDescription" />
						</td>
						<td style="text-align:right">
							<xsl:variable name="lineQty" select="@Quantity" />
							<xsl:variable name="lineUOM" select="@UnitOfMeasure" />
							<xsl:value-of select="concat(fopUtil:getFormattedDouble($lineQty,$locale),' ',/MultiApi/API[@Name='getItemUOMMasterList']/Output/ItemUOMMasterList/ItemUOMMaster[@UnitOfMeasure=$lineUOM]/@Description)" />
						</td>
						<td style="text-align:right">
							<xsl:variable name="price" select="OrderLine/LinePriceInfo/@UnitPrice" />
							<xsl:variable name="postFixSymbol" select="/MultiApi/API[@Name='getCurrencyList']/Output/CurrencyList/Currency/@PostfixSymbol" />
							<xsl:variable name="preFixSymbol" select="/MultiApi/API[@Name='getCurrencyList']/Output/CurrencyList/Currency/@PrefixSymbol" />
							<div>
								<xsl:value-of select="fopUtil:getFormattedCurrency($price,$preFixSymbol,$postFixSymbol,$locale)" />
							</div>
						</td>						
					</tr>
				</xsl:if>	
			</xsl:for-each>
		</table>
	</xsl:template>
	
</xsl:stylesheet>